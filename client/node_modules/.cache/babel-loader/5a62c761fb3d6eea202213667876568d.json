{"ast":null,"code":"import _taggedTemplateLiteral from \"/home/coderhook/1 - Programing/FullStack Helsinki University/part8/b/exercise/library-frontend/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/home/coderhook/1 - Programing/FullStack Helsinki University/part8/b/exercise/library-frontend/src/components/Books.js\";\n\nfunction _templateObject() {\n  const data = _taggedTemplateLiteral([\"\\n{  allBooks {\\n    title\\n    author\\n    published\\n  }}\\n\"]);\n\n  _templateObject = function () {\n    return data;\n  };\n\n  return data;\n}\n\nimport React from 'react';\nimport { Query } from 'react-apollo';\nimport { gql } from 'apollo-boost';\nconst ALL_BOOKS = gql(_templateObject());\n\nconst Books = props => {\n  if (!props.show) {\n    return null;\n  }\n\n  let books = [];\n  return React.createElement(Query, {\n    query: ALL_BOOKS,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, result => {\n    if (result.loading) {\n      return 'Loading...';\n    }\n\n    books = books.push(result.data.allBooks);\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, \"books\"), React.createElement(\"table\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, \"author\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, \"published\")), books.map(a => React.createElement(\"tr\", {\n      key: a.title,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, a.title), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, a.author), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, a.published))))));\n  });\n};\n\nexport default Books;","map":{"version":3,"sources":["/home/coderhook/1 - Programing/FullStack Helsinki University/part8/b/exercise/library-frontend/src/components/Books.js"],"names":["React","Query","gql","ALL_BOOKS","Books","props","show","books","result","loading","push","data","allBooks","map","a","title","author","published"],"mappings":";;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,QAAsB,cAAtB;AACA,SAASC,GAAT,QAAoB,cAApB;AAEA,MAAMC,SAAS,GAAGD,GAAH,mBAAf;;AAQA,MAAME,KAAK,GAAIC,KAAD,IAAW;AACvB,MAAI,CAACA,KAAK,CAACC,IAAX,EAAiB;AACf,WAAO,IAAP;AACD;;AAED,MAAIC,KAAK,GAAG,EAAZ;AAEA,SACE,oBAAC,KAAD;AAAO,IAAA,KAAK,EAAEJ,SAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEKK,MAAD,IAAY;AACV,QAAGA,MAAM,CAACC,OAAV,EAAmB;AAAE,aAAO,YAAP;AAAoB;;AACzCF,IAAAA,KAAK,GAAGA,KAAK,CAACG,IAAN,CAAWF,MAAM,CAACG,IAAP,CAAYC,QAAvB,CAAR;AAEA,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF,EAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBALF,CADF,EAUGL,KAAK,CAACM,GAAN,CAAUC,CAAC,IACV;AAAI,MAAA,GAAG,EAAEA,CAAC,CAACC,KAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKD,CAAC,CAACC,KAAP,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKD,CAAC,CAACE,MAAP,CAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKF,CAAC,CAACG,SAAP,CAHF,CADD,CAVH,CADF,CAHF,CADF;AA2BD,GAjCL,CADF;AAuCD,CA9CD;;AAgDA,eAAeb,KAAf","sourcesContent":["import React from 'react'\nimport { Query } from 'react-apollo'\nimport { gql } from 'apollo-boost'\n\nconst ALL_BOOKS = gql`\n{  allBooks {\n    title\n    author\n    published\n  }}\n`\n\nconst Books = (props) => {\n  if (!props.show) {\n    return null\n  }\n\n  let books = []\n\n  return (\n    <Query query={ALL_BOOKS}>\n      {\n        (result) => {\n          if(result.loading) { return 'Loading...'}\n          books = books.push(result.data.allBooks)\n\n          return (\n            <div>\n              <h2>books</h2>\n        \n              <table>\n                <tbody>\n                  <tr>\n                    <th></th>\n                    <th>\n                      author\n                    </th>\n                    <th>\n                      published\n                    </th>\n                  </tr>\n                  {books.map(a =>\n                    <tr key={a.title}>\n                      <td>{a.title}</td>\n                      <td>{a.author}</td>\n                      <td>{a.published}</td>\n                    </tr>\n                  )}\n                </tbody>\n              </table>\n            </div>\n          )\n\n        }\n      }\n    </Query>\n  )\n\n}\n\nexport default Books"]},"metadata":{},"sourceType":"module"}